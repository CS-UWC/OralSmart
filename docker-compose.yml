version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: src/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./src/media:/app/media
      - ./src/ml_models/saved_models:/app/ml_models/saved_models:ro
      - ./logs:/app/logs
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=oralsmart.settings
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DB_NAME:-oralsmart}
      MYSQL_USER: ${DB_USER:-oralsmart}
      MYSQL_PASSWORD: ${DB_PASSWORD:-oralsmart123}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass123}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/staticfiles:/app/staticfiles:ro
      - ./src/media:/app/media:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
  redis_data:

networks:
  default:
    name: oralsmart_network
